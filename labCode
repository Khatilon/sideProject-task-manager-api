// ******************
// First lab
// insert a data by creating a collection named 'users' and then insert one Document data

// db.collection('users').insertOne({
//     // _id: id,
//     name: "Steven",
//     age: 45
// }, (error, result) => {
//     if (error) {
//         return console.log('Unable to insert user');
//     }
//     console.log("Insert a data : ", result.ops);
// });


// ******************
// Second lab
// db.collection('users').insertMany([
//     {
//         name: 'Jen',
//         age: 26
//     }, {
//         name: 'Gunther',
//         age: 29
//     }
// ], (error, result) => {
//     if (error) {
//         return console.log('Unable to insert documents');
//     }
//     console.log(result.ops);
// });

// ******************
// Third lab
// db.collection('tasks').insertMany([
//     {
//         description: "first blood",
//         completed: true 
//     }, {
//         description: "second blood",
//         completed: true 
//     }, {
//         description: "third blood",
//         completed: false 
//     }
// ], (error, result) => {
//     if (error) {
//         return console.log('Unable to insert documents in tasks');
//     }
//     console.log(result.ops);
// });

// lab 4
db.collection('users').findOne({ _id: new ObjectID("609d42eb5e87760752ca43ca") }, (error, doc) => {
    if (error) {
        return console.log('Unable to fetch the data');
    }
    console.log("Fetch the data!!");
    console.log(doc);
});

// lab 5
// find do not reply the callback function, so we need see the document to find another method
db.collection('users').find({ age: 26 })
.toArray((error, docs) => {
    console.log(docs);
});

db.collection('users').find({ age: 26 })
.count((error, docsCount) => {
    console.log(docsCount);
});

db.collection('tasks').find({ completed: true })
.toArray((error, docs) => {
    console.log(docs);
});


//    lab6
//    db.collection('users').updateOne({
//         _id: ObjectID("609a9291d6293f07d72b3915")
//     }, {
//         // $set is only for mongoDB editor
//         // the mean is the $set is operator for mongodb
//         $set: {
//             name: 'MikeYang',
//         },
//         $inc: {
//             age: 2
//         }

//     }).then((result) => {
//         console.log("updatePromise Reulst", result);
//     }).catch((error) => {
//         console.log("updatePromise Reject", error);
//     });


// lab 7
// db.collection('tasks').updateMany({
//     completed: true
// }, {
//     $set: {
//         completed: false
//     }
// }).then((result) => {
//     console.log(result);
// }).then((error) => {
//     console.log(error);
// })


// lab 8

// db.collection('users').deleteMany({
//     age: 26
// }).then((result) => {
//     console.log(result);
// }).catch((error) => {
//     console.log(error);
// })

// db.collection('tasks').deleteOne({
//     description: 'first blood'
// }).then((result) => {
//     console.log(result);
// }).catch((error) => {
//     console.log(error);
// })